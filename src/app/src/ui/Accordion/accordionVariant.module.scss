@use 'src/sass/abstracts' as *;

.wrapper {
  padding: rem(20) 0 rem(40);
  &.greyBg {
    background-color: $bg-gray;
  }
}

.accordionItem {
  margin-bottom: rem(10);
  border-radius: rem(4);
  border-top: none;
  border-bottom: rem(8) solid $color-primary;
  box-shadow: $box-shadow-default;
  color: $color-secondary;
  background-color: $white;
  transition: opacity, transform $transition-duration $transition-ease;

  @media (hover: hover) and (pointer: fine) {
    &:hover {
      .icon {
        background-color: $color-primary;

        :global svg {
          color: $white;
        }
      }
    }
  }
}

.toggle {
  @include resetBtn;
  display: flex;
  justify-content: space-between;
  align-items: center;
  inline-size: 100%;
  padding: rem(20) rem(20) rem(16);
  color: $color-secondary;
  transition: opacity, transform $transition-duration $transition-ease;
  &.active {
    padding-bottom: 0;
  }
}

.buttonText {
  font-weight: 700;
  text-align: left;
  padding-right: rem(30);
  margin-top: 0;
  margin-bottom: 0;
}

.icon {
  width: rem(44);
  height: rem(44);
  min-width: rem(44);
  border-radius: rem(44);
  border: 2px solid $color-primary;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: $transition;

  :global svg {
    transition: $transition;
    color: $color-primary;
  }
}

.contentBox {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
}

.label {
  color: $red-dark;
  text-transform: uppercase;
  letter-spacing: 0.15rem;
  display: inline-block;
  margin-bottom: 0.3rem;
  font-weight: 700;
  font-size: rem(14);
}

.title {
  font-size: rem(30);
  margin-top: 0;
  margin-bottom: rem(20);
  font-weight: 300;
  color: $color-secondary;
}

.content {
  font-size: rem(16);
  padding-top: rem(5);
  padding-bottom: rem(20);
  padding-right: rem(30);
  padding: rem(5) rem(30) rem(20) rem(20);
  a {
    color: inherit;
    &:focus,
    &:hover {
      text-shadow: 0.5px 0 0 currentColor;
      color: inherit;
    }
  }
}

.contentText {
  margin-bottom: rem(30);
  color: $color-secondary;

  @media (min-width: $bp) {
    font-size: rem(18);

    p {
      font-size: rem(18);
    }
  }
}

.contentBoxColumned {
  margin-bottom: rem(30);

  a {
    min-width: 210px;
  }
}

@media (min-width: $bp-md) {
  .title {
    font-size: rem(36);
  }
}

@media (min-width: $bp) {
  .wrapper {
    padding: rem(90) 0 rem(80);
  }
  .toggle {
    padding: rem(30) rem(30) rem(26);
  }
  .buttonText {
    font-size: rem(18);
  }
  .content {
    font-size: rem(18);
    padding: rem(5) rem(30) rem(30) rem(30);
  }

  .title {
    font-size: rem(48);
    &:last-child {
      margin-bottom: rem(50);
    }
  }

  .contentBoxColumned {
    padding-right: rem(100);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .leftAligned {
    flex-direction: row-reverse;
    .contentBoxColumned {
      padding-right: rem(0);
      padding-left: min(4vw, 100px);
    }
  }
}
